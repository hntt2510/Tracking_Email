# B·∫£ng b√°o c√°o n∆°i l∆∞u tr·∫°ng th√°i email
CAMPAIGN_REPORTING_TABLE = 'AppCreator_9e421964_table_1'

# H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i ƒë√£ ƒë∆∞·ª£c s·ª≠a ƒë·ªïi ƒë·ªÉ nh·∫≠n event_type
def update_statuses(sql_helper, email, event_type, campaign_name=None):
    """
    C·∫≠p nh·∫≠t tr·∫°ng th√°i m·ªü (text_5) ho·∫∑c click (text_6, text_7) trong CAMPAIGN_REPORTING_TABLE.
    C·ªôt: text_3 (Email), text_5 (isopen), text_6 (isclick1), text_7 (isclick2).
    C√≥ th·ªÉ t√πy ch·ªçn th√™m campaign_name ƒë·ªÉ c·∫≠p nh·∫≠t ch√≠nh x√°c h∆°n.
    """
    print(f"üîÑ ƒêang c·∫≠p nh·∫≠t tr·∫°ng th√°i cho email: {email}, s·ª± ki·ªán: {event_type}, campaign: {campaign_name if campaign_name else 'N/A'}")

    update_column = None
    if event_type == "OPEN":
        update_column = "[text_5]"  # text_5 l√† isopen
    elif event_type == "CLICK_LINK1":
        update_column = "[text_6]"  # text_6 l√† isclick1
    elif event_type == "CLICK_LINK2":
        update_column = "[text_7]"  # text_7 l√† isclick2
    elif event_type == "CLICK_OTHER":
        print(f"Th√¥ng b√°o: Event type CLICK_OTHER kh√¥ng c√≥ c·ªôt c·∫≠p nh·∫≠t c·ª• th·ªÉ. B·ªè qua c·∫≠p nh·∫≠t c·ªôt.")
        return  # Tho√°t h√†m n·∫øu kh√¥ng c√≥ c·ªôt c·∫ßn c·∫≠p nh·∫≠t
    else:
        print(f"C·∫£nh b√°o: Event type '{event_type}' kh√¥ng ƒë∆∞·ª£c x·ª≠ l√Ω trong update_statuses.")
        return  # Tho√°t h√†m n·∫øu event_type kh√¥ng h·ª£p l·ªá

    if update_column:  # Ch·ªâ th·ª±c hi·ªán UPDATE n·∫øu update_column ƒë√£ ƒë∆∞·ª£c x√°c ƒë·ªãnh
        try:
            where_clause = "[text_3] = ?"  # text_3 l√† Email
            params = [email]

            if campaign_name:
                where_clause += " AND [text_2] = ?"  # text_2 l√† T√™n Campaign
                params.append(campaign_name)

            sql_helper.execute_non_query(f"""
                UPDATE {CAMPAIGN_REPORTING_TABLE}
                SET {update_column} = 'TRUE'
                WHERE {where_clause}
            """, params)
            print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t {update_column} cho email {email} (campaign: {campaign_name if campaign_name else 'ALL'}) th√†nh 'TRUE'.")
        except Exception as e:
            print(f"‚ùå L·ªói khi c·∫≠p nh·∫≠t tr·∫°ng th√°i trong {CAMPAIGN_REPORTING_TABLE} cho {email}: {e}")

if __name__ == "__main__":
    # V√≠ d·ª• s·ª≠ d·ª•ng (thay b·∫±ng th·ª±c t·∫ø)
    from utils.mssql_helper import MsSqlHelper
    sql_helper = MsSqlHelper(server='192.168.42.31', database='UNIWIN_TRAIN', user='sa', password='Abc123!!!')
    update_statuses(sql_helper, "example@email.com", "OPEN", "C01")